version: '3'

services:
  activemq:
#    build:
#      context: '.'
#      dockerfile: 'activemqDockerfile'
#      args:
#        - version=${ACTIVEMQ_VERSION}
#        - userid=${DCUSERID}
#        - groupid=${DCGRPID}
#        - dockergid=${DCDOCKERID}
#    image: 'activemq/activemquserland:${ACTIVEMQ_VERSION}-alpine'
#    container_name: 'activemq'

    image: 'rmohr/activemq:5.15.4-alpine'
    container_name: 'activemq'
    ports: 
      - 1883:1883
      - 8161:8161
      - 61613:61613
      - 61616:61616
    volumes:
      - ${DCDEVDIR}/config/activemq.xml:/opt/apache-activemq-5.15.4/conf/activemq.xml:ro
    networks:
      - default
    restart: always

  influxdb:
    image: 'influxdb:${INFLUXDB_VERSION}-alpine'
    container_name: 'influxdb'
    environment:
      INFLUXDB_LOGGING_LEVEL: debug
    ports: 
      - 8086:8086
      - 8088:8088
    volumes:
      - ${DCDATADIR}/influxdb:/var/lib/influxdb
      - ${DCDATADIR}/logs/influxdb:/var/log/influxdb
      - ${DCDEVDIR}/config/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - ${DCDEVDIR}/influxbackupdump/:/home/influxbackups/
    networks:
      - default
    user: ${DCUSERID}:${DCGRPID}
    restart: always

  chronograf:
    image: 'chronograf:${CHRONOGRAF_VERSION}-alpine'
    container_name: 'chronograf'
    ports: 
      - 8888:8888
    volumes:
      - ${DCDATADIR}/logs/chronograf:/var/log/chronograf
      - ${DCDATADIR}/chronograf:/var/lib/chronograf
    depends_on:
      - "influxdb"
      - "telegraf"
    networks:
      - default
    user: ${DCUSERID}:${DCGRPID}
    restart: always

  telegraf:
    build: 
      context: '.'
      dockerfile: 'telegrafDockerfile'
      args:
        - version=${TELEGRAF_VERSION}
        - userid=${DCUSERID}
        - groupid=${DCGRPID}
        - dockergid=${DCDOCKERID}
    image: 'telegraf/telegrafuserland:${TELEGRAF_VERSION}-alpine'
    container_name: 'telegraf'
    privileged: true
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
    hostname: telegrafDocker
    volumes:
      - ${DCDATADIR}/logs/telegraf/:/var/log/
      - ${DCDEVDIR}/config/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro
      - /var/run/utmp:/var/run/utmp
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - 'influxdb'
    networks:
      - default
    user: ${DCUSERID}
    restart: always

  grafana:
    build: 
      context: ./
      dockerfile: 'grafanaDockerfile'
      args:
        - GRAFANA_VERSION=${GRAFANA_VERSION}
        - GF_PLUGIN_NEWPATH=/home/grafana/plugins/
        - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,natel-discrete-panel,vonage-status-panel,fetzerch-sunandmoon-datasource,ryantxu-ajax-panel,jdbranham-diagram-panel,natel-plotly-panel,fatcloud-windrose-panel,michaeldmoore-annunciator-panel,blackmirror1-statusbygroup-panel,natel-influx-admin-panel,grafana-image-renderer
    image: 'grafana/grafana:${GRAFANA_VERSION}_wplugs'
    container_name: 'grafana'
    ports:
      - 3000:3000
    volumes:
      - ${DCDEVDIR}/config/grafana.ini:/etc/grafana/grafana.ini
      - ${DCDEVDIR}/extras/lowell_logo_large_transparentbg.png:/usr/share/grafana/public/img/lowell.png
      - ${DCDATADIR}/grafana/:/var/lib/grafana/
      - ${DCDATADIR}/logs/grafana:/var/log/grafana
    depends_on:
      - 'influxdb'
    networks:
      - default
    user: ${DCUSERID}:${DCGRPID}
    restart: always

  iago:
    build:
      context: './LIG/'
      dockerfile: LIGDockerfile
      args:
        - userid=${DCUSERID}
        - groupid=${DCGRPID}
    image: 'pytest'
    container_name: 'iago'
    volumes:
      - ${DCDEVDIR}/config/:/home/lig/conf
      - ${DCDATADIR}/logs/lig:/home/lig/logs
    depends_on:
      - 'influxdb'
      - 'activemq'
    working_dir: /home/lig/Codes/DataServants/
    command: ["python", "Iago.py", "-l", "/home/lig/logs/iago.log", "-c", "/home/lig/conf/iago.conf", "-p", "/home/lig/conf/passwords.conf", "--debug"]
    networks:
      - default
    user: ${DCUSERID}:${DCGRPID}
    restart: always

  alfred:
    image: 'pytest'
    container_name: 'alfred'
    volumes:
      - ${DCDEVDIR}/config/:/home/lig/conf
      - ${DCDATADIR}/logs/lig:/home/lig/logs
    depends_on:
      - 'influxdb'
    working_dir: /home/lig/Codes/DataServants/
    command: ["python", "Alfred.py", "-l", "/home/lig/logs/alfred.log", "-c", "/home/lig/conf/alfred.conf", "-p", "/home/lig/conf/passwords.conf", "--extraPings", "/home/lig/conf/alfred_extraPings.conf", "--debug"]
    networks:
      - default
    user: ${DCUSERID}:${DCGRPID}
    restart: always

  abu:
    image: 'pytest'
    container_name: 'abu'
    volumes:
      - ${DCDEVDIR}/config/:/home/lig/conf
      - ${DCDATADIR}/logs/lig:/home/lig/logs
    depends_on:
      - 'influxdb'
    working_dir: /home/lig/Codes/DataServants/
    command: ["python", "Abu.py", "-l", "/home/lig/logs/abu.log", "-c", "/home/lig/conf/abu.conf", "-p", "/home/lig/conf/passwords.conf", "--debug"]
    networks:
      - default
    user: ${DCUSERID}:${DCGRPID}
    restart: always

networks:
    default:
        driver: bridge
